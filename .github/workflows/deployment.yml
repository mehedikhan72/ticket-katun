name: Build and Deploy

on:
  push:
    branches: [ master ]
    paths:
      - "/api-gateway/**"
      - "/train-service/**"
      - "/reservation-service/**"
      - "/payment-service/**"
      - "/otp-service/**"
      - "/notification-service/**"
      - "/worker-service/**"

  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true
        default: 'latest'

env:
  REGISTRY: "registry.digitalocean.com/ticket-katun"
  GATEWAY_IMAGE_NAME: "tkt-gateway-service"
  TRAIN_SVC_IMAGE_NAME: "tkt-train-service"
  RESERVATION_SVC_IMAGE_NAME: "tkt-reservation-service"
  PAYMENT_SVC_IMAGE_NAME: "tkt-payment-service"
  OTP_SVC_IMAGE_NAME: "tkt-otp-service"
  NOTIFICATION_SVC_IMAGE_NAME: "tkt-notification-service"
  WORKER_SVC_IMAGE_NAME: "tkt-worker-service"

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - api-gateway
          - train-service
          - reservation-service
          - payment-service
          - otp-service
          - notification-service
          - worker-service
    if: contains(github.event.head_commit.message, matrix.service)

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set image name dynamically
        run: |
          IMAGE_NAME="${{ env.REGISTRY }}/tkt-${{ matrix.service }}-service"
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ github.sha }} ./${{ matrix.service }}

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push Docker image to DigitalOcean Container Registry
        run: docker push ${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    strategy:
      matrix:
        service:
          - api-gateway
          - train-service
          - reservation-service
          - payment-service
          - otp-service
          - notification-service
          - worker-service
    if: contains(github.event.head_commit.message, matrix.service)

    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Kubernetes
        run: doctl kubernetes cluster kubeconfig save ${{ secrets.DO_CLUSTER_NAME }}

      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/${{ matrix.service }}-deployment \
          ${{ matrix.service }}-container=${{ env.REGISTRY }}/tkt-${{ matrix.service }}-service:${{ github.sha }}

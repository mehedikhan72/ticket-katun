name: Gateway Deployment

on:
  push:
    branches: [ master ]
    paths:
      - "/api-gateway/**"

  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true
        default: 'latest'

env:
  REGISTRY: "registry.digitalocean.com/ticket-katun"
  IMAGE_NAME: "tkt-gateway-service"

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup Docker
        run: |
          docker system prune -af
          docker volume prune -f

  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) api-gateway

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Remove all old images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      #      - name: Remove Garbage
      #        run: doctl registry garbage-collection start pathphindr --force

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
        
      - name: Deploy to kubernetes
        run: doctl kubernetes cluster kubeconfig save ${{ secrets.CLUSTER_ID }}

      - name: Apply Deployment YAML
        run: |
          sed -i 's|<IMAGE>| registry.digitalocean.com/ticket-katun/tkt-gateway-service:'${SHORT_SHA}'|' k8s/manifests/applications/api-gateway.yml

          kubectl apply -f k8s/manifests/applications/api-gateway.yml

      - name: Kubernetes rollout restart
        run: |
          kubectl -n default rollout restart deployment api-gateway
